# {{ specification.getTitle() }} client

This client is generated using [docler-labs/api-client-generator](https://github.com/DoclerLabs/api-client-generator) based on the OpenAPI specification of the {{ specification.getTitle() }}.

You can generate the client with the following command:
```bash
docker run -it --rm \
-v <local-path-to-api>/doc/openapi.yaml:/openapi.yaml:ro \
-v <local-path-to-client>:/client \
-e NAMESPACE={{ addslashes(namespace) }} \
-e OPENAPI=/openapi.yaml \
-e OUTPUT_DIR=/client \
-e PACKAGE={{ packageName }} \
-e CLIENT_PHP_VERSION={{ phpVersion }} \
dhlabs/api-client-generator{{ generatorVersion is not empty ? ":#{generatorVersion}" }}
```

## Usage
{% set requestClass = static('\\DoclerLabs\\ApiClientGenerator\\Naming\\RequestNaming', 'getClassName', exampleOperation) %}

```php
<?php declare(strict_types=1);

use {{ namespace }}\{{ static('\\DoclerLabs\\ApiClientGenerator\\Naming\\ClientNaming', 'getFactoryClassName', specification) }};
use {{ namespace }}\Request\{{ requestClass }};

/**
 * If using Guzzle 6, make sure to configure Guzzle to not throw exceptions
 * on HTTP error status codes, or this client will violate PSR-18.
 * e.g. new Client(['base_uri' => $baseUri, 'http_errors' => false, ...])
 */
$client = ...; // any PSR-18 HTTP CLIENT

$factory = new {{ static('\\DoclerLabs\\ApiClientGenerator\\Naming\\ClientNaming', 'getFactoryClassName', specification) }}();
$client  = $factory->create($client);

$request = new {{ requestClass }}();
$result  = $client->{{ exampleOperation.getName() }}($request);
```

## Operations

{% for tag, operations in operationsGroupedByTags %}
### {{ tag }}
Endpoints:
{% for operation in operations %}
- **{{ operation.getName() }}**{% if operation.getDescription() is not empty %} - {{ operation.getDescription() }} {% endif %}

{% endfor %}

{% endfor %}
