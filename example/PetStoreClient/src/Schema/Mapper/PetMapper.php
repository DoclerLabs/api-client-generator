<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace OpenApi\PetStoreClient\Schema\Mapper;

use DoclerLabs\ApiClientException\UnexpectedResponseBodyException;
use OpenApi\PetStoreClient\Schema\Pet;

class PetMapper implements SchemaMapperInterface
{
    private CategoryMapper $categoryMapper;

    private TagCollectionMapper $tagCollectionMapper;

    public function __construct(CategoryMapper $categoryMapper, TagCollectionMapper $tagCollectionMapper)
    {
        $this->categoryMapper      = $categoryMapper;
        $this->tagCollectionMapper = $tagCollectionMapper;
    }

    /**
     * @throws UnexpectedResponseBodyException
     */
    public function toSchema(array $payload): Pet
    {
        $missingFields = \implode(', ', \array_diff(['name', 'photoUrls'], \array_keys($payload)));
        if (! empty($missingFields)) {
            throw new UnexpectedResponseBodyException('Required attributes for `Pet` missing in the response body: ' . $missingFields);
        }
        $schema = new Pet($payload['name'], $payload['photoUrls']);
        if (isset($payload['id'])) {
            $schema->setId($payload['id']);
        }
        if (isset($payload['category'])) {
            $schema->setCategory($this->categoryMapper->toSchema($payload['category']));
        }
        if (isset($payload['tags'])) {
            $schema->setTags($this->tagCollectionMapper->toSchema($payload['tags']));
        }
        if (isset($payload['status'])) {
            $schema->setStatus($payload['status']);
        }
        if (\array_key_exists('chipped', $payload)) {
            $schema->setChipped($payload['chipped']);
        }

        return $schema;
    }
}
