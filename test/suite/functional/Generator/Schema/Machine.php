<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace Test\Schema;

use JsonSerializable;

class Machine implements SerializableInterface, JsonSerializable
{
    public const OBJECT_TYPE_MACHINE = 'machine';

    private string $objectType;

    private string $model;

    private ?MachineSpecifications $specifications = null;

    private array $optionalPropertyChanged = ['specifications' => false];

    public function __construct(string $objectType, string $model)
    {
        $this->objectType = $objectType;
        $this->model      = $model;
    }

    public function setSpecifications(MachineSpecifications $specifications): self
    {
        $this->specifications                            = $specifications;
        $this->optionalPropertyChanged['specifications'] = true;

        return $this;
    }

    public function hasSpecifications(): bool
    {
        return $this->optionalPropertyChanged['specifications'];
    }

    public function getObjectType(): string
    {
        return $this->objectType;
    }

    public function getModel(): string
    {
        return $this->model;
    }

    public function getSpecifications(): ?MachineSpecifications
    {
        return $this->specifications;
    }

    public function toArray(): array
    {
        $fields               = [];
        $fields['objectType'] = $this->objectType;
        $fields['model']      = $this->model;
        if ($this->hasSpecifications()) {
            $fields['specifications'] = $this->specifications->toArray();
        }

        return $fields;
    }

    public function jsonSerialize(): array
    {
        return $this->toArray();
    }
}
