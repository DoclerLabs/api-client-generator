<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace Test\Schema;

use JsonSerializable;

class ItemWithArraysOfEnumProperties implements SerializableInterface, JsonSerializable
{
    public const MANDATORY_STRING_ENUM_ARRAY_OPTION1 = 'option1';

    public const MANDATORY_STRING_ENUM_ARRAY_OPTION2 = 'option2';

    public const MANDATORY_STRING_ENUM_ARRAY_OPTION3 = 'option3';

    public const MANDATORY_NULLABLE_STRING_ENUM_ARRAY_OPTION1 = 'option1';

    public const MANDATORY_NULLABLE_STRING_ENUM_ARRAY_OPTION2 = 'option2';

    public const MANDATORY_NULLABLE_STRING_ENUM_ARRAY_OPTION3 = 'option3';

    public const OPTIONAL_STRING_ENUM_ARRAY_OPTION_A = 'optionA';

    public const OPTIONAL_STRING_ENUM_ARRAY_OPTION_B = 'optionB';

    public const OPTIONAL_STRING_ENUM_ARRAY_OPTION_C = 'optionC';

    public const NULLABLE_STRING_ENUM_ARRAY_OPTION_A = 'optionA';

    public const NULLABLE_STRING_ENUM_ARRAY_OPTION_B = 'optionB';

    public const NULLABLE_STRING_ENUM_ARRAY_OPTION_C = 'optionC';

    private array $mandatoryStringEnumArray;

    private ?array $mandatoryNullableStringEnumArray = null;

    private ?array $optionalStringEnumArray = null;

    private array $mandatoryIntegerEnumArray;

    private ?array $nullableStringEnumArray = null;

    private array $optionalPropertyChanged = ['optionalStringEnumArray' => false, 'nullableStringEnumArray' => false];

    /**
     * @param string[]      $mandatoryStringEnumArray
     * @param string[]|null $mandatoryNullableStringEnumArray
     * @param int[]         $mandatoryIntegerEnumArray
     */
    public function __construct(array $mandatoryStringEnumArray, ?array $mandatoryNullableStringEnumArray, array $mandatoryIntegerEnumArray)
    {
        $this->mandatoryStringEnumArray         = $mandatoryStringEnumArray;
        $this->mandatoryNullableStringEnumArray = $mandatoryNullableStringEnumArray;
        $this->mandatoryIntegerEnumArray        = $mandatoryIntegerEnumArray;
    }

    /**
     * @param string[] $optionalStringEnumArray
     */
    public function setOptionalStringEnumArray(array $optionalStringEnumArray): self
    {
        $this->optionalStringEnumArray                            = $optionalStringEnumArray;
        $this->optionalPropertyChanged['optionalStringEnumArray'] = true;

        return $this;
    }

    /**
     * @param string[]|null $nullableStringEnumArray
     */
    public function setNullableStringEnumArray(?array $nullableStringEnumArray): self
    {
        $this->nullableStringEnumArray                            = $nullableStringEnumArray;
        $this->optionalPropertyChanged['nullableStringEnumArray'] = true;

        return $this;
    }

    public function hasOptionalStringEnumArray(): bool
    {
        return $this->optionalPropertyChanged['optionalStringEnumArray'];
    }

    public function hasNullableStringEnumArray(): bool
    {
        return $this->optionalPropertyChanged['nullableStringEnumArray'];
    }

    /**
     * @return string[]
     */
    public function getMandatoryStringEnumArray(): array
    {
        return $this->mandatoryStringEnumArray;
    }

    /**
     * @return string[]|null
     */
    public function getMandatoryNullableStringEnumArray(): ?array
    {
        return $this->mandatoryNullableStringEnumArray;
    }

    /**
     * @return string[]|null
     */
    public function getOptionalStringEnumArray(): ?array
    {
        return $this->optionalStringEnumArray;
    }

    /**
     * @return int[]
     */
    public function getMandatoryIntegerEnumArray(): array
    {
        return $this->mandatoryIntegerEnumArray;
    }

    /**
     * @return string[]|null
     */
    public function getNullableStringEnumArray(): ?array
    {
        return $this->nullableStringEnumArray;
    }

    public function toArray(): array
    {
        $fields                                     = [];
        $fields['mandatoryStringEnumArray']         = $this->mandatoryStringEnumArray;
        $fields['mandatoryNullableStringEnumArray'] = $this->mandatoryNullableStringEnumArray;
        if ($this->hasOptionalStringEnumArray()) {
            $fields['optionalStringEnumArray'] = $this->optionalStringEnumArray;
        }
        $fields['mandatoryIntegerEnumArray'] = $this->mandatoryIntegerEnumArray;
        if ($this->hasNullableStringEnumArray()) {
            $fields['nullableStringEnumArray'] = $this->nullableStringEnumArray;
        }

        return $fields;
    }

    public function jsonSerialize(): array
    {
        return $this->toArray();
    }
}
