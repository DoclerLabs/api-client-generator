<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace Test;

use Psr\Container\ContainerInterface;
use Psr\Http\Client\ClientInterface;
use Psr\Http\Message\ResponseInterface;
use Test\Request\AddPetTaskRequest;
use Test\Request\Mapper\RequestMapperInterface;
use Test\Request\RequestInterface;
use Test\Request\SavePetRequest;
use Test\Response\ResponseHandler;
use Test\Schema\Mapper\PetMapper;
use Test\Schema\Mapper\PetTaskMapper;
use Test\Schema\Pet;

class MultipleResponsesClient
{
    public function __construct(private readonly ClientInterface $client, private readonly ContainerInterface $container)
    {
    }

    public function sendRequest(RequestInterface $request): ResponseInterface
    {
        return $this->client->sendRequest($this->container->get(RequestMapperInterface::class)->map($request));
    }

    public function savePet(SavePetRequest $request): ?Pet
    {
        $response             = $this->sendRequest($request);
        $unserializedResponse = $this->handleResponse($response);

        return match ($response->getStatusCode()) {
            204 => null,
            200, 201 => $this->container->get(PetMapper::class)->toSchema($unserializedResponse),
        };
    }

    public function addPetTask(AddPetTaskRequest $request)
    {
        $response             = $this->sendRequest($request);
        $unserializedResponse = $this->handleResponse($response);

        return match ($response->getStatusCode()) {
            204 => null,
            200, 201 => $this->container->get(PetMapper::class)->toSchema($unserializedResponse),
            202 => $this->container->get(PetTaskMapper::class)->toSchema($unserializedResponse),
        };
    }

    protected function handleResponse(ResponseInterface $response)
    {
        return $this->container->get(ResponseHandler::class)->handle($response);
    }
}
