<?php

declare(strict_types=1);

/*
 * This file was generated by docler-labs/api-client-generator.
 *
 * Do not edit it manually.
 */

namespace Test\Request;

use Test\Schema\AcceptEnum;
use Test\Schema\PatchResourceRequestBody;
use Test\Schema\SerializableInterface;

class PatchResourceRequest implements RequestInterface
{
    private string $contentType = 'application/json';

    public function __construct(private readonly PatchResourceRequestBody $patchResourceRequestBody, private readonly string $apiKey, private readonly AcceptEnum $accept = AcceptEnum::APPLICATION_JSON)
    {
    }

    public function getContentType(): string
    {
        return $this->contentType;
    }

    public function getMethod(): string
    {
        return 'PATCH';
    }

    public function getRoute(): string
    {
        return 'v1/resources/{resourceId}';
    }

    public function getQueryParameters(): array
    {
        return [];
    }

    public function getRawQueryParameters(): array
    {
        return [];
    }

    public function getCookies(): array
    {
        return [];
    }

    public function getHeaders(): array
    {
        return array_merge(['X-API-KEY' => $this->apiKey, 'Content-Type' => $this->contentType], array_map(static function ($value) {
            return $value instanceof SerializableInterface ? $value->toArray() : $value;
        }, array_filter(['Accept' => $this->accept], static function ($value) {
            return null !== $value;
        })));
    }

    /**
     * @return PatchResourceRequestBody
     */
    public function getBody()
    {
        return $this->patchResourceRequestBody;
    }
}
